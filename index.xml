<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lily Tsai on Lily Tsai</title>
    <link>https://tslilyai.github.io/</link>
    <description>Recent content in Lily Tsai on Lily Tsai</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Lily Tsai</copyright>
    <lastBuildDate>Thu, 28 Sep 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Encounter-Based Communication</title>
      <link>https://tslilyai.github.io/project/ebc/</link>
      <pubDate>Sun, 24 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tslilyai.github.io/project/ebc/</guid>
      <description>&lt;p&gt;New applications enabled by personal smart devices and the
Internet-of-Things (IoT) increasingly require communication in the
context of an &lt;em&gt;encounter&lt;/em&gt;, defined as an interval of physical
co-location. Examples include social exchange among individuals who
met or shared an experience, and interaction among personal and IoT
devices that provide location-based services. This style of
communication has unique requirements not met by existing systems: it
should be spontaneous, privacy-preserving, secure, and possible both
during and after an encounter.&lt;/p&gt;

&lt;p&gt;We introduce a new communication paradigm called &lt;em&gt;Encounter-based Communication (EbC)&lt;/em&gt;, which uses secure encounters
as first-class objects to bootstrap communication. Beyond direct
communication between two devices that encountered each other, EbC
enables powerful new forms of group communication among devices
connected by chains of encounters, subject to spatial, temporal, and
causality constraints. We explore the opportunities and challenges
associated with EbC.&lt;/p&gt;

&lt;p&gt;This project was done on a Fulbright grant to Germany.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gitlab.rts.mpi-sws.org/encounters/ebc&#34; target=&#34;_blank&#34;&gt;Source code&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>STO: Software Transactional Objects</title>
      <link>https://tslilyai.github.io/project/sto/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tslilyai.github.io/project/sto/</guid>
      <description>

&lt;p&gt;STO is a Software Transactional Memory (STM) that improves performance by tracking abstract operations instead of memory words.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/nathanielherman/sto&#34; target=&#34;_blank&#34;&gt;Source code&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;publications&#34;&gt;Publications&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../../publication/senior_thesis/&#34;&gt;Senior Thesis&lt;/a&gt; on transactional data structures&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../publication/sto_eurosys/&#34;&gt;EuroSys &amp;lsquo;16 Paper&lt;/a&gt; on the STO system itself&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Concurrent Algorithms in Transactional Data Structures</title>
      <link>https://tslilyai.github.io/publication/senior_thesis/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://tslilyai.github.io/publication/senior_thesis/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Type Aware Transactions for Faster Concurrent Code</title>
      <link>https://tslilyai.github.io/publication/sto_eurosys/</link>
      <pubDate>Mon, 18 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://tslilyai.github.io/publication/sto_eurosys/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
